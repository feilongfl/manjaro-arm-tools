#!/bin/bash

#Usage: buildarmpkg package architecture.
#Example: buildarmpkg filesystem armv7h

#Display messages
 msg() {
    ALL_OFF="\e[1;0m"
    BOLD="\e[1;1m"
    GREEN="${BOLD}\e[1;32m"
      local mesg=$1; shift
      printf "${GREEN}==>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
 }

#Build the 'any' packages on armv7
if [ $2 == "any" ]; then
	_ARCH="armv7h"
else
	_ARCH="$2"
fi

######## Some globals to set ########
#Only set this one
_BUILDDIR=/var/lib/manjaro-arm-tools/pkg
_LIBDIR=/home/strit/git/gitlab/manjaro-arm/applications/manjaro-arm-tools/lib
_BUILDPKG="$1"
#_PKGFOLDER=/home/strit/git/gitlab/manjaro-arm/packages/

#Leave these alone
_ROOTFS=$_BUILDDIR/$_ARCH
_REPODIR=$_BUILDDIR/repo
_PKGDIR=/var/cache/manjaro-arm-tools/pkg


msg "===== Creating rootfs ====="
# backup host mirrorlist
sudo mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist-orig

# Create arm mirrorlist
echo "Server = http://mirror.strits.dk/manjaro-arm/stable/\$arch/\$repo/" > mirrorlist
sudo mv mirrorlist /etc/pacman.d/mirrorlist

# cd to root_fs
mkdir -p $_ROOTFS
cd $_ROOTFS

# basescrap the rootfs filesystem
basestrap -G -C $_LIBDIR/pacman.conf.$_ARCH $_ROOTFS base base-devel manjaro-system archlinuxarm-keyring manjaro-keyring lsb-release

# Enable cross architecture Chrooting
sudo cp /usr/bin/qemu-arm-static $_ROOTFS/usr/bin/
sudo cp /usr/bin/qemu-aarch64-static $_ROOTFS/usr/bin/

#enable qemu binaries
msg "===== Enabling qemu binaries ====="
sudo update-binfmts --enable qemu-arm
sudo update-binfmts --enable qemu-aarch64 

# restore original mirrorlist to host system
sudo mv /etc/pacman.d/mirrorlist-orig /etc/pacman.d/mirrorlist
sudo pacman -Syy

msg "===== Creating rootfs user ====="
sudo systemd-nspawn -D $_ROOTFS useradd -m -g users -G wheel,storage,network,power,users -s /bin/bash manjaro
#sudo systemd-nspawn -D $_ROOTFS pkexec chmod a=rx,u+ws /usr/bin/sudo

msg "===== Configuring rootfs for building ====="
sudo systemd-nspawn -D $_ROOTFS sed -i s/"OPT_LONG=('allsource' 'check' 'clean' 'cleanbuild' 'config:' 'force' 'geninteg'\n'help' 'holdver' 'ignorearch' 'install' 'key:' 'log' 'noarchive' 'nobuild'\n'nocolor' 'nocheck' 'nodeps' 'noextract' 'noprepare' 'nosign' 'pkg:' 'repackage'\n'rmdeps' 'sign' 'skipchecksums' 'skipinteg' 'skippgpcheck' 'source' 'syncdeps'\n'verifysource' 'version')"/"OPT_LONG=('allsource' 'check' 'clean' 'cleanbuild' 'config:' 'force' 'geninteg'\n'help' 'holdver' 'ignorearch' 'install' 'key:' 'log' 'noarchive' 'nobuild'\n'nocolor' 'nocheck' 'nodeps' 'noextract' 'noprepare' 'nosign' 'pkg:' 'repackage'\n'rmdeps' 'sign' 'skipchecksums' 'skipinteg' 'skippgpcheck' 'source' 'syncdeps'\n'verifysource' 'version' 'asroot')"/ /usr/bin/makepkg
sudo systemd-nspawn -D $_ROOTFS sed -i s/"exit $E_ROOT"/"#exit $E_ROOT"/ /usr/bin/makepkg

#cp package to rootfs
msg "===== Copying build directory {$1} to rootfs ====="
sudo systemd-nspawn -D $_ROOTFS -u manjaro --chdir=/home/manjaro/ mkdir build
sudo cp -rp /home/strit/"$1"/* $_ROOTFS/home/manjaro/build/

#build package
msg "===== Building {$1} ====="
sudo systemd-nspawn -D $_ROOTFS/ -u manjaro --chdir=/home/manjaro/ chmod -R 777 build/
sudo systemd-nspawn -D $_ROOTFS/ --chdir=/home/manjaro/build/ makepkg -scr --noconfirm
#read -p "Press [Enter] to continue"

if ls $_ROOTFS/home/manjaro/build/*.pkg.tar.xz* 1> /dev/null 2>&1; then
    #pull package out of rootfs
    msg "!!!!! +++++ ===== Package Succeeded ===== +++++ !!!!!"
    msg "===== Extracting finish/home/jenkins/build/ed package out of rootfs ====="
    cp $_ROOTFS/home/manjaro/build/*.pkg.tar.xz* $_PKGDIR/$2/

    #clean up rootfs
    msg "===== Cleaning rootfs ====="
    sudo rm -rf $_ROOTFS > /dev/null

else
    msg "!!!!! ++++++ ===== Package failed to build ===== +++++ !!!!!"
    msg "cleaning rootfs"
    sudo rm -rf $_ROOTFS > /dev/null
    exit 1
fi
 
